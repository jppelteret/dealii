
DEAL::Dim: 2
DEAL::Type list: Field solution
DEAL::{FieldSolution[s]}
DEAL::
DEAL::Type list: Functor input arguments
DEAL::{double}
DEAL::
DEAL::Outer product type list: Field solution X Field solution
DEAL::{(FieldSolution[s], FieldSolution[s])}
DEAL::
DEAL::OK
DEAL::Type list: Field solution
DEAL::{FieldSolution[s], Grad(FieldSolution[s])}
DEAL::
DEAL::Type list: Functor input arguments
DEAL::{double, Tensor<1, 2, double>}
DEAL::
DEAL::Outer product type list: Field solution X Field solution
DEAL::{(FieldSolution[s], FieldSolution[s]), (FieldSolution[s], Grad(FieldSolution[s])), (Grad(FieldSolution[s]), FieldSolution[s]), (Grad(FieldSolution[s]), Grad(FieldSolution[s]))}
DEAL::
DEAL::OK
DEAL::Type list: Field solution
DEAL::{FieldSolution[s], Grad(FieldSolution[s]), Hess(FieldSolution[s])}
DEAL::
DEAL::Type list: Functor input arguments
DEAL::{double, Tensor<1, 2, double>, Tensor<2, 2, double>}
DEAL::
DEAL::Outer product type list: Field solution X Field solution
DEAL::{(FieldSolution[s], FieldSolution[s]), (FieldSolution[s], Grad(FieldSolution[s])), (FieldSolution[s], Hess(FieldSolution[s])), (Grad(FieldSolution[s]), FieldSolution[s]), (Grad(FieldSolution[s]), Grad(FieldSolution[s])), (Grad(FieldSolution[s]), Hess(FieldSolution[s])), (Hess(FieldSolution[s]), FieldSolution[s]), (Hess(FieldSolution[s]), Grad(FieldSolution[s])), (Hess(FieldSolution[s]), Hess(FieldSolution[s]))}
DEAL::
DEAL::OK
DEAL::Type list: Field solution
DEAL::{FieldSolution[s], Grad(FieldSolution[s]), Hess(FieldSolution[s]), Lap(FieldSolution[s])}
DEAL::
DEAL::Type list: Functor input arguments
DEAL::{double, Tensor<1, 2, double>, Tensor<2, 2, double>, double}
DEAL::
DEAL::Outer product type list: Field solution X Field solution
DEAL::{(FieldSolution[s], FieldSolution[s]), (FieldSolution[s], Grad(FieldSolution[s])), (FieldSolution[s], Hess(FieldSolution[s])), (FieldSolution[s], Lap(FieldSolution[s])), (Grad(FieldSolution[s]), FieldSolution[s]), (Grad(FieldSolution[s]), Grad(FieldSolution[s])), (Grad(FieldSolution[s]), Hess(FieldSolution[s])), (Grad(FieldSolution[s]), Lap(FieldSolution[s])), (Hess(FieldSolution[s]), FieldSolution[s]), (Hess(FieldSolution[s]), Grad(FieldSolution[s])), (Hess(FieldSolution[s]), Hess(FieldSolution[s])), (Hess(FieldSolution[s]), Lap(FieldSolution[s])), (Lap(FieldSolution[s]), FieldSolution[s]), (Lap(FieldSolution[s]), Grad(FieldSolution[s])), (Lap(FieldSolution[s]), Hess(FieldSolution[s])), (Lap(FieldSolution[s]), Lap(FieldSolution[s]))}
DEAL::
DEAL::OK
DEAL::Type list: Field solution
DEAL::{FieldSolution[s], Grad(FieldSolution[s]), Hess(FieldSolution[s]), Lap(FieldSolution[s]), D3(FieldSolution[s])}
DEAL::
DEAL::Type list: Functor input arguments
DEAL::{double, Tensor<1, 2, double>, Tensor<2, 2, double>, double, Tensor<3, 2, double>}
DEAL::
DEAL::Outer product type list: Field solution X Field solution
DEAL::{(FieldSolution[s], FieldSolution[s]), (FieldSolution[s], Grad(FieldSolution[s])), (FieldSolution[s], Hess(FieldSolution[s])), (FieldSolution[s], Lap(FieldSolution[s])), (FieldSolution[s], D3(FieldSolution[s])), (Grad(FieldSolution[s]), FieldSolution[s]), (Grad(FieldSolution[s]), Grad(FieldSolution[s])), (Grad(FieldSolution[s]), Hess(FieldSolution[s])), (Grad(FieldSolution[s]), Lap(FieldSolution[s])), (Grad(FieldSolution[s]), D3(FieldSolution[s])), (Hess(FieldSolution[s]), FieldSolution[s]), (Hess(FieldSolution[s]), Grad(FieldSolution[s])), (Hess(FieldSolution[s]), Hess(FieldSolution[s])), (Hess(FieldSolution[s]), Lap(FieldSolution[s])), (Hess(FieldSolution[s]), D3(FieldSolution[s])), (Lap(FieldSolution[s]), FieldSolution[s]), (Lap(FieldSolution[s]), Grad(FieldSolution[s])), (Lap(FieldSolution[s]), Hess(FieldSolution[s])), (Lap(FieldSolution[s]), Lap(FieldSolution[s])), (Lap(FieldSolution[s]), D3(FieldSolution[s])), (D3(FieldSolution[s]), FieldSolution[s]), (D3(FieldSolution[s]), Grad(FieldSolution[s])), (D3(FieldSolution[s]), Hess(FieldSolution[s])), (D3(FieldSolution[s]), Lap(FieldSolution[s])), (D3(FieldSolution[s]), D3(FieldSolution[s]))}
DEAL::
DEAL::OK
DEAL::OK
DEAL::OK
